<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Rafael_BLE_F032S_ADV_DEMO.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Rafael_BLE_F032S_ADV_DEMO.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Dec 16 09:17:26 2020
<BR><P>
<H3>Maximum Stack Usage =        276 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DTM_Main_Loop &rArr; dtm_cmd_put &rArr; dtm_cmd &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
 <LI><a href="#[28]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">SysCtlDelay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1e]">CAN_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from spi.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_IRQHandler</a> from spi.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from bsp_misc.o(i.EXTI4_15_IRQHandler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[a]">RCC_CRS_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[8]">RTC_BKP_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systick.o(i.SysTick_Handler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[21]">SystemInit</a> from system_mm32f032xx_s.o(i.SystemInit) referenced from startup_mm32f032xx_s_keil.o(.text)
 <LI><a href="#[16]">TIM14_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from ble_dtm.o(i.TIM16_IRQHandler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from ble_dtm.o(i.TIM17_IRQHandler) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[15]">TIM3_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1c]">UART1_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1d]">UART2_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[1f]">USB_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_mm32f032xx_s_keil.o(.text) referenced from startup_mm32f032xx_s_keil.o(RESET)
 <LI><a href="#[22]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f032xx_s_keil.o(.text)
 <LI><a href="#[23]">fputc</a> from uart.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[20]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[26]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[b4]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[b5]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[28]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_misc.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_BKP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f032xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_bank_get
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_bank_get
</UL>

<P><STRONG><a name="[92]"></a>rand</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[b8]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_wait
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a8]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_pdu
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bf]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>BSP_SPI_BLE_Init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, bsp_spi_ble.o(i.BSP_SPI_BLE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BSP_SPI_BLE_Init &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CSInternalSelected
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BiDirectionalLineConfig
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>

<P><STRONG><a name="[7d]"></a>BleTxFIFOAddr_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rf_phy.o(i.BleTxFIFOAddr_Get))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2BYT_SetTx_Isr
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx_Old
</UL>

<P><STRONG><a name="[37]"></a>Ble_SW_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rf_phy.o(i.Ble_SW_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WTR_intOn
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, spi.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi.o(i.DMA1_Channel4_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA1_Channel4_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>DMA_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>

<P><STRONG><a name="[3c]"></a>DMA_DeInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>

<P><STRONG><a name="[3a]"></a>DMA_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>DMA_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>

<P><STRONG><a name="[89]"></a>DMA_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>

<P><STRONG><a name="[88]"></a>DMA_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>

<P><STRONG><a name="[3d]"></a>DTM_Isr</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, ble_dtm.o(i.DTM_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DTM_Isr &rArr; SPI_PDMA_SetRx_Isr &rArr; SPI_PDMA_SetRx_Isr_Old &rArr; SPIx_DMA_RxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx_Isr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetRx_Isr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFIFOrst
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>DTM_Main_Loop</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, main.o(i.DTM_Main_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = DTM_Main_Loop &rArr; dtm_cmd_put &rArr; dtm_cmd &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_wait
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_event_get
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd_put
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_misc.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = EXTI4_15_IRQHandler &rArr; DTM_Isr &rArr; SPI_PDMA_SetRx_Isr &rArr; SPI_PDMA_SetRx_Isr_Old &rArr; SPIx_DMA_RxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>EXTI_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>EXTI_Init</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, hal_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exEXTI_LineDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntDisable
</UL>

<P><STRONG><a name="[57]"></a>EXTI_LineConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal_exti.o(i.EXTI_LineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_LineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntDisable
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_Init</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioPinInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[85]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[52]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
</UL>

<P><STRONG><a name="[71]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
</UL>

<P><STRONG><a name="[5c]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioPinInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[55]"></a>MCU_GpioIntDisable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bsp_misc.o(i.MCU_GpioIntDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MCU_GpioIntDisable &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[59]"></a>MCU_GpioIntEnable</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bsp_misc.o(i.MCU_GpioIntEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MCU_GpioIntEnable &rArr; MCU_GpioPinInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioPinInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_LineConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[5a]"></a>MCU_GpioPinInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bsp_misc.o(i.MCU_GpioPinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MCU_GpioPinInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>

<P><STRONG><a name="[58]"></a>NVIC_Init</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntDisable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_InterruptConfigure
</UL>

<P><STRONG><a name="[5b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioPinInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[86]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[56]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntDisable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[5e]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[60]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[61]"></a>RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5f]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[62]"></a>RF_Enter_DeepSleep</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rf_phy.o(i.RF_Enter_DeepSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RF_Enter_DeepSleep &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[63]"></a>RF_Init</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, rf_phy.o(i.RF_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntEnable
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioIntDisable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_spi_clear_tx_fifo_cnt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_spi_clear_fifo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Voltage_Det
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxFIFO_OriginAddr_set
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxLengthLimit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ble_SW_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
</UL>

<P><STRONG><a name="[6d]"></a>RF_LE_HeaderStsLen_Tx</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rf_phy.o(i.RF_LE_HeaderStsLen_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_LE_HeaderStsLen_Tx &rArr; SPI_2BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>RF_PLL_VCO_Bank_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_phy.o(i.RF_PLL_VCO_Bank_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_PLL_VCO_Bank_set &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
</UL>

<P><STRONG><a name="[44]"></a>RF_RxFIFOrst</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_phy.o(i.RF_RxFIFOrst))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_RxFIFOrst &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
</UL>

<P><STRONG><a name="[65]"></a>RF_RxLengthLimit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, rf_phy.o(i.RF_RxLengthLimit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_RxLengthLimit &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[75]"></a>RF_Set_TxPowerLevel_Isr</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rf_phy.o(i.RF_Set_TxPowerLevel_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = RF_Set_TxPowerLevel_Isr &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[73]"></a>RF_SpiIoMapping</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, main.o(i.RF_SpiIoMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = RF_SpiIoMapping &rArr; BSP_SPI_BLE_Init &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayMs
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_GpioPinInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI_BLE_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiGpioWriteReg
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
</UL>

<P><STRONG><a name="[78]"></a>RF_SymbolRate_set</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rf_phy.o(i.RF_SymbolRate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_SymbolRate_set &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
</UL>

<P><STRONG><a name="[38]"></a>RF_Tmr_Periodic_initial</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, rf_phy.o(i.RF_Tmr_Periodic_initial))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_waitFinish
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_set_ISR
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ble_SW_Init
</UL>

<P><STRONG><a name="[7a]"></a>RF_Tmr_Periodic_set_ISR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rf_phy.o(i.RF_Tmr_Periodic_set_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_waitFinish
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
</UL>

<P><STRONG><a name="[69]"></a>RF_TxFIFO_OriginAddr_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_phy.o(i.RF_TxFIFO_OriginAddr_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_TxFIFO_OriginAddr_set &rArr; SPI_2BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[6b]"></a>RF_Voltage_Det</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, rf_phy.o(i.RF_Voltage_Det))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RF_Voltage_Det &rArr; delay_us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[39]"></a>RF_WTR_intOn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rf_phy.o(i.RF_WTR_intOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RF_WTR_intOn &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ble_SW_Init
</UL>

<P><STRONG><a name="[7b]"></a>RT568_tx_rf_continuous_mode</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rf_phy.o(i.RT568_tx_rf_continuous_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RT568_tx_rf_continuous_mode &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[3e]"></a>SPI_1BYT_SetRx</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_spi_ble.o(i.SPI_1BYT_SetRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_1BYT_SetRx
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Voltage_Det
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>SPI_1BYT_SetRx_Isr</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bsp_spi_ble.o(i.SPI_1BYT_SetRx_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_1BYT_SetRx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
</UL>

<P><STRONG><a name="[3f]"></a>SPI_1BYT_SetTx</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_spi_ble.o(i.SPI_1BYT_SetTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_spi_clear_tx_fifo_cnt
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_spi_clear_fifo
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RT568_tx_rf_continuous_mode
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Voltage_Det
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PLL_VCO_Bank_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Enter_DeepSleep
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>

<P><STRONG><a name="[42]"></a>SPI_1BYT_SetTx_Isr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bsp_spi_ble.o(i.SPI_1BYT_SetTx_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannel_BLE
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm_Isr
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WTR_intOn
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SymbolRate_set
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxLengthLimit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFIFOrst
</UL>

<P><STRONG><a name="[6e]"></a>SPI_2BYT_SetTx_Isr</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bsp_spi_ble.o(i.SPI_2BYT_SetTx_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_2BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleTxFIFOAddr_Get
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_TxFIFO_OriginAddr_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_LE_HeaderStsLen_Tx
</UL>

<P><STRONG><a name="[35]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_BiDirectionalLineConfig))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI_BLE_Init
</UL>

<P><STRONG><a name="[33]"></a>SPI_CSInternalSelected</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_CSInternalSelected))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI_BLE_Init
</UL>

<P><STRONG><a name="[84]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[8c]"></a>SPI_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_TxData
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_RxData
</UL>

<P><STRONG><a name="[76]"></a>SPI_GPIO_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(i.SPI_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SPI_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>

<P><STRONG><a name="[83]"></a>SPI_Init</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, hal_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[41]"></a>SPI_PDMA_SetRx_Isr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_spi_ble.o(i.SPI_PDMA_SetRx_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SPI_PDMA_SetRx_Isr &rArr; SPI_PDMA_SetRx_Isr_Old &rArr; SPIx_DMA_RxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetRx_Isr_Old
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
</UL>

<P><STRONG><a name="[7e]"></a>SPI_PDMA_SetRx_Isr_Old</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bsp_spi_ble.o(i.SPI_PDMA_SetRx_Isr_Old))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SPI_PDMA_SetRx_Isr_Old &rArr; SPIx_DMA_RxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_RxData
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetRx_Isr
</UL>

<P><STRONG><a name="[64]"></a>SPI_PDMA_SetTx</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_spi_ble.o(i.SPI_PDMA_SetTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx_Old
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_set_ISR
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Set_TxPowerLevel_Isr
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[80]"></a>SPI_PDMA_SetTx_Old</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bsp_spi_ble.o(i.SPI_PDMA_SetTx_Old))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleTxFIFOAddr_Get
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_ReadWriteByte
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_TxData
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
</UL>

<P><STRONG><a name="[79]"></a>SPI_PDMA_waitFinish</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_spi_ble.o(i.SPI_PDMA_waitFinish))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_set_ISR
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
</UL>

<P><STRONG><a name="[82]"></a>SPI_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Configure
</UL>

<P><STRONG><a name="[34]"></a>SPIx_Configure</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, spi.o(i.SPIx_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SPIx_Configure &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StructInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI_BLE_Init
</UL>

<P><STRONG><a name="[36]"></a>SPIx_DMA_Configure</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, spi.o(i.SPIx_DMA_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_StructInit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SPI_BLE_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_TxData
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_RxData
</UL>

<P><STRONG><a name="[8b]"></a>SPIx_DMA_InterruptConfigure</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, spi.o(i.SPIx_DMA_InterruptConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SPIx_DMA_InterruptConfigure &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_TxData
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_RxData
</UL>

<P><STRONG><a name="[7f]"></a>SPIx_DMA_RxData</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, spi.o(i.SPIx_DMA_RxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SPIx_DMA_RxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMACmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_InterruptConfigure
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetRx_Isr_Old
</UL>

<P><STRONG><a name="[81]"></a>SPIx_DMA_TxData</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, spi.o(i.SPIx_DMA_TxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMACmd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_InterruptConfigure
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_DMA_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx_Old
</UL>

<P><STRONG><a name="[7c]"></a>SPIx_ReadWriteByte</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, spi.o(i.SPIx_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx_Isr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2BYT_SetTx_Isr
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx_Old
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetRx_Isr_Old
</UL>

<P><STRONG><a name="[70]"></a>SysTick_DelayMs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick.o(i.SysTick_DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>SysTick_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, systick.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SysTick_Init &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_mm32f032xx_s.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClockTo48
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo48
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, ble_dtm.o(i.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TIM16_IRQHandler &rArr; RF_Voltage_Det &rArr; delay_us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannel_BLE
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Voltage_Det
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_LE_HeaderStsLen_Tx
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ble_dtm.o(i.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM17_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f032xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>TIMER_DisableInt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_misc.o(i.TIMER_DisableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_DisableInt
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[48]"></a>TIMER_EnableInt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_misc.o(i.TIMER_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_EnableInt
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[96]"></a>TIMER_Open</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bsp_misc.o(i.TIMER_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIMER_Open &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
</UL>

<P><STRONG><a name="[9b]"></a>TIMER_Start</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bsp_misc.o(i.TIMER_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
</UL>

<P><STRONG><a name="[9d]"></a>TIMER_Stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_misc.o(i.TIMER_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[9a]"></a>TIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[91]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Stop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Start
</UL>

<P><STRONG><a name="[97]"></a>TIM_DeInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, hal_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exRCC_APB2PeriphReset
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exRCC_APB1PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[90]"></a>TIM_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_DisableInt
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
</UL>

<P><STRONG><a name="[9e]"></a>TIM_SetCounter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Stop
</UL>

<P><STRONG><a name="[99]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[98]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
</UL>

<P><STRONG><a name="[4b]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[a4]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
</UL>

<P><STRONG><a name="[4a]"></a>UART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[a1]"></a>UART_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
</UL>

<P><STRONG><a name="[4c]"></a>UART_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[4f]"></a>UART_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(i.UART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[a3]"></a>UART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
</UL>

<P><STRONG><a name="[a2]"></a>UARTx_Configure</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, uart.o(i.UARTx_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = UARTx_Configure &rArr; UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c4]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[6c]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c5]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c7]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[43]"></a>delay_us</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_misc.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = delay_us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Isr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Voltage_Det
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiGpioWriteReg
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>dtm_cmd</STRONG> (Thumb, 570 bytes, Stack size 24 bytes, ble_dtm.o(i.dtm_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = dtm_cmd &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Stop
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Start
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_DisableInt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_test_done
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RT568_tx_rf_continuous_mode
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Tmr_Periodic_initial
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Set_TxPowerLevel_Isr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Enter_DeepSleep
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd_put
</UL>

<P><STRONG><a name="[4d]"></a>dtm_cmd_put</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_dtm.o(i.dtm_cmd_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = dtm_cmd_put &rArr; dtm_cmd &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[4e]"></a>dtm_event_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_dtm.o(i.dtm_event_get))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[47]"></a>dtm_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, ble_dtm.o(i.dtm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = dtm_init &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Start
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_Open
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[49]"></a>dtm_wait</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_dtm.o(i.dtm_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = dtm_wait &rArr; check_pdu &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_pdu
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
</UL>

<P><STRONG><a name="[54]"></a>exEXTI_LineDisable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_exti.o(i.exEXTI_LineDisable))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>

<P><STRONG><a name="[a0]"></a>exRCC_APB1PeriphReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_rcc.o(i.exRCC_APB1PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[9f]"></a>exRCC_APB2PeriphReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_rcc.o(i.exRCC_APB2PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[23]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendData
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = main &rArr; DTM_Main_Loop &rArr; dtm_cmd_put &rArr; dtm_cmd &rArr; radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTx_Configure
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTM_Main_Loop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Open
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[af]"></a>rafael_pll_bank_get</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, rf_phy.o(i.rafael_pll_bank_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rafael_pll_bank_get &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
</UL>

<P><STRONG><a name="[6a]"></a>rafael_pll_calibration</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, rf_phy.o(i.rafael_pll_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = rafael_pll_calibration &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannel_BLE
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_bank_get
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_WTR_intOn
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SymbolRate_set
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PLL_VCO_Bank_set
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[68]"></a>rafael_reset_phy_fsm</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, rf_phy.o(i.rafael_reset_phy_fsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rafael_reset_phy_fsm &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[ae]"></a>rafael_reset_phy_fsm_Isr</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rf_phy.o(i.rafael_reset_phy_fsm_Isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rafael_reset_phy_fsm_Isr &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_reset
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
</UL>

<P><STRONG><a name="[66]"></a>rafael_spi_clear_fifo</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rf_phy.o(i.rafael_spi_clear_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rafael_spi_clear_fifo &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[67]"></a>rafael_spi_clear_tx_fifo_cnt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rf_phy.o(i.rafael_spi_clear_tx_fifo_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rafael_spi_clear_tx_fifo_cnt &rArr; SPI_1BYT_SetTx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>

<P><STRONG><a name="[93]"></a>setChannel_BLE</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rf_phy.o(i.setChannel_BLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setChannel_BLE &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_prepare_rt568
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_pll_calibration
</UL>

<P><STRONG><a name="[77]"></a>spiGpioWriteReg</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, main.o(i.spiGpioWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = spiGpioWriteReg &rArr; delay_us &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>SetSysClockTo48</STRONG> (Thumb, 194 bytes, Stack size 20 bytes, system_mm32f032xx_s.o(i.SetSysClockTo48))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClockTo48
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6f]"></a>RF_Open</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, main.o(i.RF_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = RF_Open &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_DelayMs
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_SpiIoMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>check_pdu</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, ble_dtm.o(i.check_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = check_pdu &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_wait
</UL>

<P><STRONG><a name="[aa]"></a>dtm_test_done</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_dtm.o(i.dtm_test_done))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dtm_test_done &rArr; radio_reset &rArr; rafael_reset_phy_fsm_Isr &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[ab]"></a>radio_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_dtm.o(i.radio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = radio_init &rArr; RF_Init &rArr; Ble_SW_Init &rArr; RF_Tmr_Periodic_initial &rArr; RF_Tmr_Periodic_set_ISR &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_reset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_init
</UL>

<P><STRONG><a name="[ac]"></a>radio_prepare_rt568</STRONG> (Thumb, 420 bytes, Stack size 48 bytes, ble_dtm.o(i.radio_prepare_rt568))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = radio_prepare_rt568 &rArr; SPI_PDMA_SetTx &rArr; SPI_PDMA_SetTx_Old &rArr; SPIx_DMA_TxData &rArr; SPIx_DMA_Configure &rArr; DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_PDMA_SetTx
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setChannel_BLE
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm_Isr
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_RxFIFOrst
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RF_PLL_VCO_Bank_set
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetTx
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1BYT_SetRx
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_cmd
</UL>

<P><STRONG><a name="[ad]"></a>radio_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_dtm.o(i.radio_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = radio_reset &rArr; rafael_reset_phy_fsm_Isr &rArr; SPI_1BYT_SetTx_Isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rafael_reset_phy_fsm_Isr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dtm_test_done
</UL>

<P><STRONG><a name="[8e]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[a6]"></a>_printf_core</STRONG> (Thumb, 680 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
